@model ITICDE.Models.File

@{
    ViewData["Title"] = "File Viewer";
    var ModelName = (string)@Model.Name.Split('.').First();
    var FileExtention = (string)@Model.Name.Split('.').Last();
}
<h3>@Model.Name</h3>

@{
	
	if(Model.Type == ".ifc")
	{
    <!DOCTYPE html>
    <html >
    <head>
            <meta charset="utf-8" />
            <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
            <meta name="viewport" content="width=device-width, initial-scale=1" />
            <title>xeokit Example</title>

            <link
                rel="stylesheet"
                href="../../Viewer/lib/fontawesome-free-5.11.2-web/css/all.min.css"
                type="text/css"
            />
            <link rel="stylesheet" href="../../Viewer/css/xeokit-bim-viewer.css" type="text/css" />
            <link href="../../Viewer/css/Xeo.css" rel="stylesheet" />
            <link href="../../Viewer/css/SideBar.css" rel="stylesheet" />
    </head>

    <body >
            <button class="openbtn" onclick="openNav()">&gt;</button>

            <button class="ToggleCam" onclick="resetPlanes()">removeLastPlane</button>
            <div id="main">
                <div id="myToolbar">
                <div class="xeokit-toolbar">
                    <!--TreeViewer-->
                    <button
                    for="explorer_toggle"
                    class="explorer_toggle_label xeokit-btn fas fa-2x fa-sitemap"
                    data-tippy-content="Toggle explorer panel"
                    ></button>
                    <!-- Reset button -->
                    <div class="xeokit-btn-group">
                    <button
                        type="button"
                        class="xeokit-reset xeokit-btn fa fa-home fa-2x"
                        data-tippy-content="Reset view"
                        onclick="ResetViewer()"
                    ></button>

                    <!-- Perspective/Ortho Mode button -->
                    <button
                        type="button"
                        class="xeokit-threeD xeokit-btn fa fa-cube fa-2x"
                        data-tippy-content="Toggle 2D/3D"
                        onclick="SetCamera()"
                    ></button>
                    </div>
                    <!-- Tools button group -->
                    <div class="xeokit-btn-group" role="group">
                    <!-- section tool button -->

                    <button
                        type="button"
                        id="sectionbtn"
                        class="xeokit-section xeokit-btn fa fa-cut fa-2x disabled"
                        data-tippy-content="Slice objects"
                    >
                        <div
                        class="xeokit-section-menu-button"
                        data-tippy-content="Slices menu"
                        >
                        <span
                            class="xeokit-arrow-down xeokit-section-menu-button-arrow"
                        ></span>
                        </div>
                        <div
                        class="xeokit-section-counter"
                        data-tippy-content="Number of existing slices"
                        ></div>
                    </button>
                    <button
                        type="button"
                        class="xeokit-query fa fa-info-circle fa-2x xeokit-btn"
                        data-tippy-content="Query objects"
                        id="Query"
                    >
                        hhhh
                    </button>
                    </div>
                </div>
                </div>

                <canvas id="myCanvas"></canvas>
                <canvas id="myNavCubeCanvas"></canvas>
                <canvas id="mySectionPlanesOverviewCanvas"></canvas>
            </div>

            <div id="mySidebar" class="sidebar">
                <div class="topnav">
                <a href="javascript:void(0)" class="closebtn" onclick="closeNav()"
                    >&lt;</a
                >
                <a href="javascript:void(0);" onclick="ChangeTree('containment')"
                    >Objects</a
                >

                <a href="javascript:void(0);" onclick="ChangeTree('types')">Types</a>
                <a href="javascript:void(0);" onclick="ChangeTree('storeys')"
                    >Stories</a
                >
                </div>

                <div id="treeViewContainer"></div>
            </div>
            <embed id="ifcfile" src="/Files/@Model.Name"/>                                
            <script src="../../Viewer/scripts/Viewer.js" type="module"></script>
            <script src="../../Viewer/scripts/TreeView.js" type="module"></script>
            <script src="../../Viewer/scripts/NavCube.js" type="module"></script>
            <script src="../../Viewer/scripts/SectionPlanes.js" type="module"></script>
            <script type="module">
                //this is loader for models
                import { WebIFCLoaderPlugin } from "../../Viewer/dist/xeokit-sdk.es.js";
                const webIFCLoader = new WebIFCLoaderPlugin(viewer, {                
                wasmPath: "../../Viewer/dist/",                 
                });
                //------------------------------------------------------------------------------------------------------------------
                // Load IFC Models
                //------------------------------------------------------------------------------------------------------------------
            const model1 = webIFCLoader.load({
                // Returns an Entity that represents the model
                id: "ifcfile",
                src: @Html.Raw("\"/Files/" + @Model.Name + "\""),
                //src: @Html.Raw("\""+"/Files/" + @Model.Name + "\""),
                                                
                loadMetadata: true,
                edges: false,
                });
                //const model2 = webIFCLoader.load({
                //  // Returns an Entity that represents the model
                //  id: "Duplex",
                //  src: "../../ifc-models/Duplex.ifc",
                //  loadMetadata: true,
                //  excludeTypes: ["IfcSpace"],
                //  edges: false,
                                               
                //});
                //const model3 = webIFCLoader.load({
                //  // Returns an Entity that represents the model
                //  id: "StrutureModel",
                //  src: "../../ifc-models/StructureModel.ifc",
                //  loadMetadata: true,
                //  excludeTypes: ["IfcSpace"],
                //  edges: false,
                                                
                //});
                window.loaderifc = webIFCLoader;
            </script>

            <script>
                //sidebar open and close
                function openNav() {
                document.getElementById("mySidebar").style.width = "350px";
                document.getElementById("main").style.marginLeft = "350px";
                }

                function closeNav() {
                document.getElementById("mySidebar").style.width = "0";
                document.getElementById("main").style.marginLeft = "0";
                }
            </script>
    </body>
    </html>


	}
	else
	{
    <embed id="embPDF" src="/Files/@Model.Name" style="width:100%; height:1200px; "/>
	};
	
}
